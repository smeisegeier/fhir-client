@model FhirClient.Viewmodels.PatientEditViewmodel

<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<div class="form-inline">
    <label asp-for="Id" class="form-control col-sm-2 bg-warning"></label>
    <input asp-for="Id" class="form-control col-sm-6" readonly />
</div>
<br />
<div class="form-inline">
    <label asp-for="Active" class="form-control col-sm-2 bg-warning"></label>
    <!-- bool? as datatype is special. options cannot be retrieved from enum or class -->
    <select asp-for="Active" class="form-control">
        <option>not set</option>
        <option>true</option>
        <option>false</option>
    </select>
    <span asp-validation-for="Active" class="text-danger"></span>
</div>

<hr /><h4>Identifier</h4><br />
@if (Model.Identifier is not null && Model.Identifier.Any())
{
    @foreach (var item in Model.Identifier)
    {
        <div class="form-inline">
            @Html.LabelFor(i => item.Use)
            @Html.DropDownListFor(i => item.Use, @Html.GetEnumSelectList<Hl7.Fhir.Model.Identifier.IdentifierUse>())
            @Html.LabelFor(i => item.System)
            @Html.TextBoxFor(i => item.System, new { style = "width:20em;" })
            @Html.LabelFor(i => item.Value)
            @Html.TextBoxFor(i => item.Value, new { style = "width:8em;" })
        </div>
    }
}
@*<input type="button" value="Add" onclick="location.href='@Url.Action("Test", "Home")'" />*@

<br />
<div class="form-inline">
    <label asp-for="Gender" class="form-control col-sm-2 bg-warning"></label>
    <select asp-for="Gender" class="form-control"
            asp-items="Html.GetEnumSelectList<Hl7.Fhir.Model.AdministrativeGender>()">
        <option selected="selected" value="">not set</option>
    </select>
    <span asp-validation-for="Gender" class="text-danger"></span>
</div>
<br />
<div class="form-inline">
    <label asp-for="BirthDate" class="form-control col-sm-2 bg-warning"></label>
    <input asp-for="BirthDate" class="form-control col-sm-3" />
</div>

<hr /><h4>Name</h4><br />
@if (Model.Name is not null && Model.Name.Any())
{
    @foreach (HumanName item in Model.Name)
    {
        <div class="form-inline">
            @Html.LabelFor(i => item.Use)
            @Html.DropDownListFor(i => item.Use, @Html.GetEnumSelectList<Hl7.Fhir.Model.HumanName.NameUse>())
            @Html.LabelFor(i => item.Text)
            @Html.TextBoxFor(i => item.Text, new { disabled = "disabled", @readonly = "readonly", style = "width:12em;" })
            @Html.LabelFor(i => item.Family)
            @Html.TextBoxFor(i => item.Family, new { style = "width:8em;" })
            @Html.LabelFor(i => item.Given)
            @foreach (var given in item.Given)
            {
                @Html.TextBoxFor(i => given, new { style = "width:8em;" })
            }
        </div>
    }
}

<hr /><h4>Address</h4><br />
@if (Model.Address is not null && Model.Address.Any())
{
    @foreach (Address item in Model.Address)
    {
        <div class="form-inline">
            @Html.LabelFor(i => item.Use)
            @Html.DropDownListFor(i => item.Use, @Html.GetEnumSelectList<Hl7.Fhir.Model.Address.AddressUse>())
            @Html.LabelFor(i => item.Type)
            @Html.DropDownListFor(i => item.Type, @Html.GetEnumSelectList<Hl7.Fhir.Model.Address.AddressType>())
            @Html.LabelFor(i => item.Country)
            @Html.TextBoxFor(i => item.Country, new { style = "width:12em;" })
        </div>
        <div class="form-inline">
            @Html.LabelFor(i => item.City)
            @Html.TextBoxFor(i => item.City, new { style = "width:8em;" })
            @Html.LabelFor(i => item.PostalCode)
            @Html.TextBoxFor(i => item.PostalCode, new { style = "width:8em;" })
        </div>
        <div class="form-inline">
            @Html.LabelFor(i => item.Line)
            @foreach (var line in item.Line)
            {
                @Html.TextBoxFor(l => line, new { style = "width:8em;" })
            }
        </div>
    }
}


<hr /><h4>Marital Status</h4><br />
<div class="form-inline">
    @Html.LabelFor(i => Model.MaritalStatus.Text)
    @Html.EditorFor(i => Model.MaritalStatus.Text)
</div>
@if (Model.MaritalStatus is not null && Model.MaritalStatus.Coding.Any())
{
    @foreach (Coding item in Model.MaritalStatus.Coding)
    {
        <div class="form-group">
            @Html.LabelFor(i => item.Code)
            @Html.TextBoxFor(i => item.Code, new { style = "width:2em;" })
            @Html.LabelFor(i => item.Display)
            @Html.EditorFor(i => item.Display)
            @Html.LabelFor(i => item.System)
            @Html.TextBoxFor(i => item.System, new { style = "width:20em;" })
        </div>
    }
}

<hr /><h4>Deceased</h4><br />
<div class="form-inline">
    @*<label><input asp-for="deceasedBoolean" type="checkbox" value=""/>@Html.DisplayNameFor(m => m.deceasedBoolean)</label>*@
    <label asp-for="deceasedBoolean" class="form-control col-sm-2 bg-warning"></label>
    <select asp-for="deceasedBoolean" class="form-control">
        <option>not set</option>
        <option>true</option>
        <option>false</option>
    </select>
    <span asp-validation-for="deceasedBoolean" class="text-danger"></span>
    <label asp-for="deceasedDateTime" class="form-control col-sm-2 bg-warning"></label>
    <input asp-for="deceasedDateTime" class="form-control" />
    <span asp-validation-for="deceasedDateTime" class="text-danger"></span>
</div>

<br /><br /><h4>Contact</h4><br />
@if (Model.Contact is not null && Model.Contact.Any())
{
    @foreach (var item in Model.Contact)
    {
        <div class="form-inline">
            @Html.LabelFor(i => item.Name.Family)
            @Html.EditorFor(i => item.Name.Family)
        </div>
            @foreach(var item2 in item.Relationship)
            {
                <div class="form-inline">
                    Relationship - Text
                    @Html.EditorFor(i => item2.Text)
                    @foreach (var item3 in item2.Coding)
                    {
                        <div class="form-inline">
                        @Html.LabelFor(i => item3.Code)
                        @Html.EditorFor(i => item3.Code)
                        @Html.LabelFor(i => item3.Display)
                        @Html.EditorFor(i => item3.Display)
                        @Html.LabelFor(i => item3.System)
                        @Html.EditorFor(i => item3.System)
                        </div>
                    }
                </div>
            }
    }
}

<hr /><h4>Communication</h4><br />
@if (Model.Communication is not null && Model.Communication.Any())
{
    @foreach (var item in Model.Communication)
    {
        <div class="form-inline">
            @Html.LabelFor(i => item.Preferred)
            @Html.EditorFor(i => item.Preferred)
            @Html.LabelFor(i => item.Language.Text)
            @Html.EditorFor(i => item.Language.Text)
        </div>
        @if (item.Language is not null)
        {
            @foreach(var item2 in item.Language.Coding)
            {
                <div class="form-inline">
                    @Html.LabelFor(i => item2.Code)
                    @Html.EditorFor(i => item2.Code)
                    @Html.LabelFor(i => item2.System)
                    @Html.EditorFor(i => item2.System)
                    @Html.LabelFor(i => item2.Display)
                    @Html.EditorFor(i => item2.Display)
                </div>
            }
        }
    }
}

<hr /><h4>General Practitioner</h4><br />
@if (Model.GeneralPractitioner is not null && Model.GeneralPractitioner.Any())
{
    @foreach (var item in Model.GeneralPractitioner)
    {
        <div class="form-inline">
            @Html.LabelFor(i => item.Reference)
            @Html.EditorFor(i => item.Reference)
            @Html.LabelFor(i => item.Display)
            @Html.EditorFor(i => item.Display)
            @Html.LabelFor(i => item.Url)
            @Html.EditorFor(i => item.Url)
        </div>
    }
}




