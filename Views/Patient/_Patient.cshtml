@model FhirClient.Viewmodels.PatientEditViewmodel


<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<div class="border-3">
    <div class="form-inline">
        <label asp-for="Id" class="form-control col-sm-2 bg-warning" data-toggle="tooltip" title="Internal server id" data-placement="top"></label>
        <input asp-for="Id" class="form-control col-sm-4" readonly />
        <input asp-for="lastUpdated" class="form-control col-sm-2" readonly />
    </div>
</div>
<br />
<div class="border-top">
    <div class="form-inline">
        <label asp-for="Active" class="form-control col-sm-2 bg-warning"></label>
        <!-- bool? as datatype is special. options cannot be retrieved from enum or class 
        <select asp-for="Active" class="form-control">
            <option>true</option>
            <option>false</option>
        </select>
        -->
        <!--insert no break spaces to shove checkbox to the right-->
        <span>&nbsp;&nbsp;&nbsp;</span>
        <input asp-for="Active" class="form-control"/>
    </div>
</div>
<br />
<div class="form-inline">
    <label asp-for="Gender" class="form-control col-sm-2 bg-warning"></label>
    <select asp-for="Gender" class="form-control"
            asp-items="Html.GetEnumSelectList<Hl7.Fhir.Model.AdministrativeGender>()">
        <option selected="selected" value="">not set</option>
    </select>
    <span asp-validation-for="Gender" class="text-danger"></span>
</div>
<br />
<div class="form-inline">
    <label asp-for="BirthDate" class="form-control col-sm-2 bg-warning"></label>
    <input asp-for="BirthDate" class="form-control col-sm-3" />
</div>

<hr /><h4>Identifier</h4>
@Html.DisplayFor(x => x.Identifier, "Identifier")

<hr /><h4>Name</h4>
@Html.DisplayFor(x => x.Name, "Name")


<hr /><h4>Address</h4><br />
@if (Model.Address is not null && Model.Address.Any())
{
    @for (int i=0; i< Model.Address.Count(); i++)
    {
        <div class="form-inline">
            <label asp-for="Address[i].Use" class="form-control col-sm-1 bg-warning"></label>
            <select asp-for="Address[i].Use" class="form-control" asp-items="Html.GetEnumSelectList<Hl7.Fhir.Model.Address.AddressUse>()"></select>
            <label asp-for="Address[i].Type" class="form-control col-sm-1 bg-warning"></label>
            <select asp-for="Address[i].Type" class="form-control" asp-items="Html.GetEnumSelectList<Hl7.Fhir.Model.Address.AddressType>()"></select>
            <label asp-for="Address[i].Country" class="form-control col-sm-1 bg-warning"></label>
            <input asp-for="Address[i].Country" class="form-control col-sm-3" />
        </div>
        <div class="form-inline">
            <label asp-for="Address[i].City" class="form-control col-sm-1 bg-warning"></label>
            <input asp-for="Address[i].City" class="form-control col-sm-3" />
            <label asp-for="Address[i].PostalCode" class="form-control col-sm-2 bg-warning"></label>
            <input asp-for="Address[i].PostalCode" class="form-control col-sm-3" />
        </div>
    }
}

<hr /><h4>Marital Status</h4><br />
@Html.DisplayFor(x => x.MaritalStatus, "CodeableConcept")

@*
<hr /><h4>Deceased</h4><br />
<div class="form-inline">
    <label asp-for="deceasedBoolean" class="form-control col-sm-2 bg-warning"></label>
    <select asp-for="deceasedBoolean" class="form-control">
        <option>not set</option>
        <option>true</option>
        <option>false</option>
    </select>
    <label asp-for="deceasedDateTime" class="form-control col-sm-2 bg-warning"></label>
    <input asp-for="deceasedDateTime" class="form-control" />
</div>
*@
<br /><br /><h4>Contact</h4><br />
@if (Model.Contact is not null && Model.Contact.Any())
{
    @foreach (var item in Model.Contact)
    {
        <div class="form-inline">
            @Html.LabelFor(i => item.Name.Family)
            @Html.EditorFor(i => item.Name.Family)
        </div>
            @foreach(var item2 in item.Relationship)
            {
                <div class="form-inline">
                    Relationship - Text
                    @Html.EditorFor(i => item2.Text)
                    @foreach (var item3 in item2.Coding)
                    {
                        <div class="form-inline">
                        @Html.LabelFor(i => item3.Code)
                        @Html.EditorFor(i => item3.Code)
                        @Html.LabelFor(i => item3.Display)
                        @Html.EditorFor(i => item3.Display)
                        @Html.LabelFor(i => item3.System)
                        @Html.EditorFor(i => item3.System)
                        </div>
                    }
                </div>
            }
    }
}

<hr /><h4>Communication</h4><br />
@if (Model.Communication is not null && Model.Communication.Any())
{
    @foreach (var item in Model.Communication)
    {
        <div class="form-inline">
            @Html.LabelFor(i => item.Preferred, new {@class="form-control col-sm-2 bg-warning"})
            @Html.EditorFor(i => item.Preferred, new {@class="form-control col-sm-3"})
            @Html.LabelFor(i => item.Language.Text, new {@class="form-control col-sm-2 bg-warning"})
            @Html.EditorFor(i => item.Language.Text, new {@class="form-control col-sm-2"})
        </div>
        @if (item.Language is not null)
        {
            @foreach(var item2 in item.Language.Coding)
            {
                <div class="form-inline">
                    @Html.LabelFor(i => item2.Code)
                    @Html.EditorFor(i => item2.Code)
                    @Html.LabelFor(i => item2.System)
                    @Html.EditorFor(i => item2.System)
                    @Html.LabelFor(i => item2.Display)
                    @Html.EditorFor(i => item2.Display)
                </div>
            }
        }
    }
}

<hr /><h4>General Practitioner</h4><br />
@if (Model.GeneralPractitioner is not null && Model.GeneralPractitioner.Any())
{
    @foreach (var item in Model.GeneralPractitioner)
    {
        <div class="form-inline">
            @Html.LabelFor(i => item.Reference)
            @Html.EditorFor(i => item.Reference)
            @Html.LabelFor(i => item.Display)
            @Html.EditorFor(i => item.Display)
            @Html.LabelFor(i => item.Url)
            @Html.EditorFor(i => item.Url)
        </div>
    }
}



